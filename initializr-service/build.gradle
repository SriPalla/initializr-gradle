buildscript {
    repositories {
        mavenLocal()
        maven { url "http://repo.maven.apache.org/maven2" }
        maven {url "https://plugins.gradle.org/m2/"}
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE"
        classpath "gradle.plugin.com.github.ksoichiro:gradle-build-info-plugin:0.2.0"
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'com.github.ksoichiro.build.info'
apply plugin: 'org.springframework.boot'

group = 'com.usaa.itps.blueprint'
version = '1.0.0-SNAPSHOT'

description = """blueprint-Service"""

repositories {
    mavenLocal()
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

//FIXME: Must be removed once the test case is fixed
test {
    exclude '**/*Tests*'
}

dependencies {
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.4.2.RELEASE') {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile group: 'com.usaa.itps.blueprint', name: 'blueprint-web', version: '1.0.0-SNAPSHOT'
    compile group: 'com.usaa.itps.blueprint', name: 'blueprint-actuator', version: '1.0.0-SNAPSHOT'
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '1.4.2.RELEASE'
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    testCompile("junit:junit")
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.4.2.RELEASE') {
        exclude(module: 'commons-logging')
    }
    testCompile group: 'com.usaa.itps.blueprint', name: 'blueprint-generator', version: '1.0.0-SNAPSHOT'
    testCompile group: 'com.usaa.itps.blueprint', name: 'blueprint-generator', classifier: 'tests'
    testCompile group: 'xmlunit', name: 'xmlunit', version: '1.5'
}

buildInfo {
    // Date format string used to Git committer date.
    committerDateFormat 'yyyy-MM-dd HH:mm:ss Z'

    // Date format string used to build date.
    buildDateFormat 'yyyy-MM-dd HH:mm:ss Z'

    // Set to true if you want to generate/merge Manifest.MF.
    manifestEnabled true

    // Set to true if you want to generate git.properties.
    // Default is false, but when you use Spring Boot Actuator
    // and you don't set this property explicitly to false,
    // git.properties will be generated.
    gitPropertiesEnabled true

    // Behavior when the plugin cannot read .git directory.
    // Set to MODE_IGNORE if you want to ignore it and proceed task.
    // Set to MODE_ERROR if you want to throw an exception to stop build.
    // Default is MODE_DEFAULT.
    // MODE_DEFAULT will set the values of branch, commit,
    // and committer date to "unknown", then proceed task.
    gitInfoMode com.github.ksoichiro.build.info.BuildInfoExtension.MODE_ERROR

    // Set to false if you want to suppress log when .git directory
    // cannot be read.
    // Default is true.
    warnIfGitDirectoryIsMissing true

    // Set to false if you want to exclude some attributes
    // from the manifest file.
    // All properties are true by default.
    attributeGitBranchEnabled true
    attributeGitCommitEnabled true
    attributeGitCommitterDateEnabled true
    attributeBuildDateEnabled true
    attributeBuildJavaVersionEnabled true
    attributeBuildJavaVendorEnabled true
    attributeBuildOsNameEnabled true
    attributeBuildOsVersionEnabled true
}

